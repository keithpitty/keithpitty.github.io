---
layout: post
title: Ruby Resources on my Radar
date: 2012-06-06
permalink: /blog/archives/2012-06-06-ruby-resources-on-my-radar
---
p. There's never enough time!

p. I'd love to have more time to make use of all the resources I have at my disposal to learn more about the Ruby programming language.

p. It is eight years since I first encountered Ruby and nearly five since I moved to using Ruby as my language of choice to earn a living. So I've collected many different resources during those years as I have progressed through my journey to hopefully become a more proficient practitioner of the language that Matz designed to make programming a happier experience.

h2. Inspiration

p. Recently I gave a lightning talk at the "Sydney Ruby":http://ruby.org.au/meetups/syd.html meetup (a.k.a. rorosyd) inspired by the Ruby Rogues podcast. I love the format that Charles Max Wood et al use, particularly their "picks" at the end of the show. So I decided I'd give the podcast a plug, provide some picks of my own and then open it up to the audience to share their picks.

p. The experience set me thinking about all the wonderful resources now available to Ruby programmers - so many to choose from. I thought I'd take the time to share my viewpoint. Hopefully you'll take away something useful.

p. First of all, here are the picks I chose to share at "rorosyd" and why I chose them.

h3. Podcast: Ruby Rogues

p. Ever since I started listening to the "Ruby Rogues":http://rubyrogues.com/ podcast a few months ago I have found it compelling.  Regular panelists Charles Max Wood, Avdi Grimm, Josh Susser, James Edward Gray II and David Brady always present a lively and entertaining podcast. When combined with the views of their guest, the discussion never fails to leave me with lessons learned and thoughts provoked.

h3. Book: Objects on Rails - Avdi Grimm

p. Even though I'm still working my way through Avdi's book I've read enough to know that I can thoroughly recommend his approach. As the title implies, Avdi encourages readers of "Objects on Rails":http://objectsonrails.com/ to go beyond blindly using Rails and think in terms of Ruby objects. His use of what he calls Exhibits to bridge the gap between views and models is exemplary. 

h3. Book: The Rails View - John Athayde and Bruce Williams

p. Although not strictly a Ruby book, it is one that I nevertheless thoroughly recommend to all Rails developers. "The Rails View":http://pragprog.com/book/warv/the-rails-view provides a long overdue, comprehensive coverage of the one part of the Rails MVC triad that has been often overlooked in the past. With the advent of the Rails 3.1 Asset Pipeline, this is a timely addition.

h3. Screencasts: Railscasts Pro - Ryan Bates

p. For years Ryan Bates endeared himself to the Ruby on Rails community by providing free, informative, well prepared and presented "Railscasts":http://railscasts.com about various Rails topics on a weekly basis. Ryan manages to summarise the essence of his topics in 10 or 15 minutes per episode. Now he has launched "Railscasts Pro":http://railscasts.com/pro, and at $9 per month I consider them a steal.

h3. Github Ruby Style Guide

p. Whilst there are numerous resources about how to solve various problems with the Ruby language, the "Github Ruby Style Guide":https://github.com/styleguide/ruby provides an excellent guide to the nuances of the style with which Ruby code should be formatted.

h3. Podcast: The Ruby Show

p. For several years I've been enjoying "The Ruby Show":http://rubyshow.com/, a weekly Ruby news podcast hosted by Peter Cooper, of _Ruby Inside_ fame, and Jason Seifer. I like their informal style of banter during which they also manage to deliver a good coverage of what's topical in the world of Ruby programming.

h2. More Resources on my Radar

p. When I delved further into my library of Ruby resources, I found more excellent examples, some more thoroughly explored than others.

h3. Articles: Practicing Ruby - Gregory Brown

p. I've found some gems of understanding about Ruby within the articles of "Practicing Ruby":http://practicingruby.com/, which Gregory Brown describes as "an eclectic journal for the dedicated hacker". It certainly comes under the category of "Ruby resources I'd love to fully utilise if I had more time". If you want to explore the nuances of programming with Ruby, I thoroughly recommend _Practicing Ruby_.

h3. Book: Practical Object-Oriented Design in Ruby - Sandi Metz

p. In fact, it was within a _Practicing Ruby_ article about _SOLID Design Principles_ that I first came across the excellent work of Sandi Metz through a recommendation Gregory gave about a talk she gave at GoRuCo in 2009. Now Sandi is in the process of releasing her book, "Practical Object-Oriented Design in Ruby":http://my.safaribooksonline.com/book/programming/ruby/9780132930895. Sandi shows how to design Ruby classes so that programmers who use your code later will thank you.

h3. Book: Eloquent Ruby - Russ Olsen

p. How could Ruby programmer who values craftsmanship and who has already read Russ Olsen's work not be tempted by his book _Eloquent Ruby_? This book guides the reader through a series of rules of thumb about how to make the most of Ruby's many facets. For more, see the book's "companion site":http://eloquentruby.com/.

h3. Book: Metaprogramming Ruby - Paolo Perrotta

p. Want a thorough treatment of metaprogramming techniques in Ruby? Look no further than Paolo Perrotta's book, "Metaprogamming Ruby":http://pragprog.com/book/ppmetr/metaprogramming-ruby. It guides the reader through the fundamentals of metaprogramming before exploring the way it was used in the Rails 2.3 codebase. Also included are some useful appendices about common Ruby idioms and how DSLs overlap with metaprogramming.

h3. Screencast: The Ruby 1.9 Walkthrough - Peter Cooper

p. At the time of writing I'm about half way through watching Peter Cooper's detailed screencast about what's new in Ruby 1.9. What's really instructive is the tool that Peter uses throughout to show how snippets of Ruby code produce different results in different versions of Ruby, all as part of the same output. This is a superb way of demonstrating the improvements in Ruby 1.9. Obviously very well researched, "The Ruby 1.9 Walkthrough":https://cooperpress.com/19walkthrough is to be thoroughly recommended.

h2. Some Old Favourites

h3. Peepcode Screencasts - Geoffrey Grosenbach

p. I'm a self-confessed fan of "Peepcode Screencasts":https://peepcode.com/. Whilst Peepcode now covers a broad range of technologies there are some excellent recent screencasts which focus on Ruby, such as the Play by Play episodes featuring "Aaron Patterson":https://peepcode.com/products/play-by-play-tenderlove-ruby-on-rails and "Jim Weirich":https://peepcode.com/products/play-by-play-jimweirich-ruby.

h3. Book: The Ruby Programming Language - David Flanagan & Yukihiro Matsumoto

p. Finally, if you want a definitive reference, "The Ruby Programming Language":http://shop.oreilly.com/product/9780596516178.do provides a comprehensive yet concise coverage.

h2. In Conclusion

p. The resources about the language have proliferated since 2001 when Dave Thomas and Andy Hunt helped spread Ruby beyond Japan through their book popularly known as _The Pickaxe_, which has "been updated":http://pragprog.com/book/ruby3/programming-ruby-1-9 to cover Ruby 1.9. 

p. Wherever you are along your journey with exploring programming in Ruby, I hope there is something in this list that you will find useful.
